{"remainingRequest":"C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\src\\App.vue","mtime":1634281164751},{"path":"C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\avini\\Avin_Dev\\iuri_fresh\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// styles\nimport '@/styles/app.scss';\nimport '@/styles/nprogress.scss';\n// GSAP + ScrollMagic\nimport * as ScrollMagic from \"scrollmagic\";\nimport { TweenMax, TimelineMax } from \"gsap\";\nimport { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\nScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\n// Components\nimport Header from '@/components/Header.vue';\nimport Spine from '@/components/Spine.vue';\nimport BgBody from '@/components/BgBody.vue';\n\nexport default {\n    name: 'App',\n    data() {\n        return {\n            viewport: {\n                w: window.innerWidth,\n                h: window.innerHeight,\n                is568: window.innerWidth <= 568,\n                is768: window.innerWidth <= 768,\n                is1024: window.innerWidth <= 1024,\n            },\n            introTimeline: new TimelineMax(),\n            leaveTimeline: new TimelineMax(),\n        };\n    },\n    created() {\n        // update viewport\n        this.updateViewport();\n        // add resize listener\n        window.addEventListener('resize', this.updateViewport);\n        // add beforeunload listener, in case of refresh\n        window.addEventListener(\"beforeunload\", () => window.scroll(0,0));\n    },\n    methods: {\n        enter(el, done) {\n            // intro animations\n            this.introTimeline\n                .clear()\n                .addLabel('enter', 0)\n                .fromTo('.header-breadcrumb', 1, {\n                    autoAlpha: 0,\n                    x: -32,\n                }, {\n                    autoAlpha: 1,\n                    x: 0,\n                    ease: Power3.easeOut,\n                }, 'enter')\n                .fromTo(el, 1, {\n                    autoAlpha: 0\n                }, {\n                    autoAlpha: 1,\n                }, 'enter')\n                .fromTo('.spine', 1, {\n                    autoAlpha: 0,\n                    yPercent: 20,\n                }, {\n                    autoAlpha: 1,\n                    yPercent: 0,\n                    ease: Power3.easeOut,\n                    onComplete: done\n                }, 'enter')\n                .fromTo('.spine-target .circle', 1, {\n                    scale: 0,\n                    autoAlpha: 0\n                }, {\n                    scale: 1,\n                    autoAlpha: 1,\n                    ease: Elastic.easeOut.config(1, 0.5)\n                }, 'enter+=.7')\n                .fromTo('.spine-target .circle', 2, {\n                    backgroundColor: 'transparent',\n                }, {\n                    backgroundColor: '#5918df',\n                }, 'enter+=1.2')\n                .fromTo('.spine-target .pulse', 4, {\n                    autoAlpha: 1,\n                    scale: 0,\n                }, {\n                    autoAlpha: 0,\n                    scale: 8,\n                    ease: Power3.easeOut,\n                }, 'enter+=1.2');\n        },\n        leave(el, done) {\n            // leave animations\n            this.leaveTimeline\n                .clear()\n                .addLabel('leave', 0)\n                .to('.spine-target .circle, .spine-target .pulse', .5, {\n                    scale: 0,\n                    autoAlpha: 0,\n                    ease: Power3.easeIn\n                }, 'leave')\n                .to('.spine', .5, {\n                    autoAlpha: 0,\n                    yPercent: 50,\n                    ease: Power3.easeIn\n                }, 'leave+=.25')\n                .set('.header-breadcrumb', {autoAlpha: 0}, 'leave')\n                .to(el, 1, {\n                    autoAlpha: 0,\n                    onComplete: done\n                }, 'leave');\n        },\n        updateViewport() {\n            // update\n            this.viewport = {\n                w: window.innerWidth,\n                h: window.innerHeight,\n                is568: window.innerWidth <= 568,\n                is768: window.innerWidth <= 768,\n                is1024: window.innerWidth <= 1024,\n            }\n        },\n    },\n    components: {\n        Header,\n        Spine,\n        BgBody,\n    },\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <div id=\"app\" :class=\"this.$route.meta.bodyClass\">\r\n        <BgBody />\r\n\r\n        <Header :routeName=\"this.$route.name\"\r\n                :viewport=\"viewport\" />\r\n\r\n        <transition appear\r\n                    mode=\"out-in\"\r\n                    :css=\"false\"\r\n                    @leave=\"leave\"\r\n                    @enter=\"enter\">\r\n\r\n            <router-view :viewport=\"viewport\" />\r\n\r\n        </transition>\r\n\r\n        <Spine />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // styles\r\n    import '@/styles/app.scss';\r\n    import '@/styles/nprogress.scss';\r\n    // GSAP + ScrollMagic\r\n    import * as ScrollMagic from \"scrollmagic\";\r\n    import { TweenMax, TimelineMax } from \"gsap\";\r\n    import { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\r\n    ScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\r\n    // Components\r\n    import Header from '@/components/Header.vue';\r\n    import Spine from '@/components/Spine.vue';\r\n    import BgBody from '@/components/BgBody.vue';\r\n\r\n    export default {\r\n        name: 'App',\r\n        data() {\r\n            return {\r\n                viewport: {\r\n                    w: window.innerWidth,\r\n                    h: window.innerHeight,\r\n                    is568: window.innerWidth <= 568,\r\n                    is768: window.innerWidth <= 768,\r\n                    is1024: window.innerWidth <= 1024,\r\n                },\r\n                introTimeline: new TimelineMax(),\r\n                leaveTimeline: new TimelineMax(),\r\n            };\r\n        },\r\n        created() {\r\n            // update viewport\r\n            this.updateViewport();\r\n            // add resize listener\r\n            window.addEventListener('resize', this.updateViewport);\r\n            // add beforeunload listener, in case of refresh\r\n            window.addEventListener(\"beforeunload\", () => window.scroll(0,0));\r\n        },\r\n        methods: {\r\n            enter(el, done) {\r\n                // intro animations\r\n                this.introTimeline\r\n                    .clear()\r\n                    .addLabel('enter', 0)\r\n                    .fromTo('.header-breadcrumb', 1, {\r\n                        autoAlpha: 0,\r\n                        x: -32,\r\n                    }, {\r\n                        autoAlpha: 1,\r\n                        x: 0,\r\n                        ease: Power3.easeOut,\r\n                    }, 'enter')\r\n                    .fromTo(el, 1, {\r\n                        autoAlpha: 0\r\n                    }, {\r\n                        autoAlpha: 1,\r\n                    }, 'enter')\r\n                    .fromTo('.spine', 1, {\r\n                        autoAlpha: 0,\r\n                        yPercent: 20,\r\n                    }, {\r\n                        autoAlpha: 1,\r\n                        yPercent: 0,\r\n                        ease: Power3.easeOut,\r\n                        onComplete: done\r\n                    }, 'enter')\r\n                    .fromTo('.spine-target .circle', 1, {\r\n                        scale: 0,\r\n                        autoAlpha: 0\r\n                    }, {\r\n                        scale: 1,\r\n                        autoAlpha: 1,\r\n                        ease: Elastic.easeOut.config(1, 0.5)\r\n                    }, 'enter+=.7')\r\n                    .fromTo('.spine-target .circle', 2, {\r\n                        backgroundColor: 'transparent',\r\n                    }, {\r\n                        backgroundColor: '#5918df',\r\n                    }, 'enter+=1.2')\r\n                    .fromTo('.spine-target .pulse', 4, {\r\n                        autoAlpha: 1,\r\n                        scale: 0,\r\n                    }, {\r\n                        autoAlpha: 0,\r\n                        scale: 8,\r\n                        ease: Power3.easeOut,\r\n                    }, 'enter+=1.2');\r\n            },\r\n            leave(el, done) {\r\n                // leave animations\r\n                this.leaveTimeline\r\n                    .clear()\r\n                    .addLabel('leave', 0)\r\n                    .to('.spine-target .circle, .spine-target .pulse', .5, {\r\n                        scale: 0,\r\n                        autoAlpha: 0,\r\n                        ease: Power3.easeIn\r\n                    }, 'leave')\r\n                    .to('.spine', .5, {\r\n                        autoAlpha: 0,\r\n                        yPercent: 50,\r\n                        ease: Power3.easeIn\r\n                    }, 'leave+=.25')\r\n                    .set('.header-breadcrumb', {autoAlpha: 0}, 'leave')\r\n                    .to(el, 1, {\r\n                        autoAlpha: 0,\r\n                        onComplete: done\r\n                    }, 'leave');\r\n            },\r\n            updateViewport() {\r\n                // update\r\n                this.viewport = {\r\n                    w: window.innerWidth,\r\n                    h: window.innerHeight,\r\n                    is568: window.innerWidth <= 568,\r\n                    is768: window.innerWidth <= 768,\r\n                    is1024: window.innerWidth <= 1024,\r\n                }\r\n            },\r\n        },\r\n        components: {\r\n            Header,\r\n            Spine,\r\n            BgBody,\r\n        },\r\n    };\r\n</script>\r\n"]}]}